#user  nobody;
user root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen 8088;

        location /nginx_status {
        # Turn on stats
        stub_status on;
        access_log   off;
        }
    }
    #server {
    #    listen       80;
    #    server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

     #   location / {
     #       root   html;
     #       index  index.html index.htm;
     #   }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
      #  error_page   500 502 503 504  /50x.html;
      #  location = /50x.html {
      #      root   html;
      #  }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    #}

    upstream webserver_http {
                server 172.17.170.6:80;
                server 172.17.170.8:80;
    }

    server {
                listen 80;
        location / {
                proxy_pass  http://webserver_http;
        }
    }

    upstream webserver_https {
                server 172.17.170.6:443;
                server 172.17.170.8:443;
    }

    server {
                listen 443 ssl;
		server_tokens off;
		ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
                ssl_certificate         /etc/ssl/lb-a/bmlabwifilba.tdlab.ca.crt;
                ssl_certificate_key     /etc/ssl/lb-a/bmlabwifilba.tdlab.ca.key;
                ssl_trusted_certificate /etc/ssl/lb-a/rootCA.pem;
		ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
		ssl_dhparam    /opt/nginx/conf/dhparams.pem;
		add_header X-XSS-Protection "1; mode=block";
		add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
		add_header X-Frame-Options “sameorigin”;
		add_header X-Content-Type-Options nosniff;

        location / {
                proxy_pass  https://webserver_https;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

stream {

        upstream dns {
                server 172.17.170.6:53;
                server 172.17.170.8:53;
        }

        server {
                listen 172.17.170.124:53 udp;
                listen 172.17.170.125:53 udp;
                proxy_pass dns;
		proxy_bind $remote_addr transparent;
		proxy_responses 1;
        }
}
